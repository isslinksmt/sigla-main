CREATE OR REPLACE procedure CONTROLLO_CONGRUENZA_DATI(aMessage OUT varchar2) AS
	contaanomalie NUMBER := 0;
BEGIN
	--CONTROLLO CHE LE OBBLIGAZIONI SIANO COSTRUITE CORRETTAMENTE
	FOR rec IN (SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE,
						SUM(IM_OBBLIGAZIONE) IM_OBBLIGAZIONE, SUM(TOT_SCADENZE) TOT_SCADENZE, SUM(TOT_SCADVOCE) TOT_SCADVOCE FROM (
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE, IM_OBBLIGAZIONE, 0 TOT_SCADENZE, 0 TOT_SCADVOCE FROM OBBLIGAZIONE o
					UNION ALL
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE, 0, os.IM_SCADENZA, 0 FROM OBBLIGAZIONE_SCADENZARIO os
					UNION ALL
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE, 0, 0, osv.IM_VOCE FROM OBBLIGAZIONE_SCAD_VOCE osv)
					GROUP BY CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE
					HAVING SUM(IM_OBBLIGAZIONE) != SUM(TOT_SCADENZE) OR SUM(IM_OBBLIGAZIONE) != SUM(TOT_SCADVOCE)) LOOP
		IF rec.IM_OBBLIGAZIONE != rec.TOT_SCADENZE THEN
			contaanomalie := contaanomalie + 1;
			dbms_output.put_line('Obbligazione '||rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_OBBLIGAZIONE||
					' di importo '||ltrim(rtrim(to_char(rec.IM_OBBLIGAZIONE,'999g999g999g999g990d00')))||
					' non coincidente con il totale scadenze '||
					ltrim(rtrim(to_char(rec.TOT_SCADENZE,'999g999g999g999g990d00')))||'.');
		ELSE
			FOR rec1 IN (SELECT PG_OBBLIGAZIONE_SCADENZARIO, SUM(IM_SCADENZA) IM_SCADENZA, SUM(TOT_SCADVOCE) TOT_SCADVOCE FROM (
							SELECT PG_OBBLIGAZIONE_SCADENZARIO, os.IM_SCADENZA, 0 TOT_SCADVOCE FROM OBBLIGAZIONE_SCADENZARIO os
							WHERE CD_CDS = rec.CD_CDS
							AND   ESERCIZIO = rec.ESERCIZIO
							AND   ESERCIZIO_ORIGINALE = rec.ESERCIZIO_ORIGINALE
							AND   PG_OBBLIGAZIONE = rec.PG_OBBLIGAZIONE
							UNION ALL
							SELECT PG_OBBLIGAZIONE_SCADENZARIO, 0, osv.IM_VOCE FROM OBBLIGAZIONE_SCAD_VOCE osv
							WHERE CD_CDS = rec.CD_CDS
							AND   ESERCIZIO = rec.ESERCIZIO
							AND   ESERCIZIO_ORIGINALE = rec.ESERCIZIO_ORIGINALE
							AND   PG_OBBLIGAZIONE = rec.PG_OBBLIGAZIONE)
							GROUP BY PG_OBBLIGAZIONE_SCADENZARIO
							HAVING SUM(IM_SCADENZA) != SUM(TOT_SCADVOCE)) LOOP
				contaanomalie := contaanomalie + 1;
				dbms_output.put_line('Scadenza '||rec1.PG_OBBLIGAZIONE_SCADENZARIO||' dell''obbligazione '||
						rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_OBBLIGAZIONE||
						' di importo '||ltrim(rtrim(to_char(rec1.IM_SCADENZA,'999g999g999g999g990d00')))||
						' non coincidente con il totale ripartito per voce '||
						ltrim(rtrim(to_char(rec1.TOT_SCADVOCE,'999g999g999g999g990d00')))||'.');
			END LOOP;
		END IF;
	END LOOP;

	--CONTROLLO CHE GLI ACCERTAMENTI SIANO COSTRUITI CORRETTAMENTE
	FOR rec IN (SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO,
						SUM(IM_ACCERTAMENTO) IM_ACCERTAMENTO, SUM(TOT_SCADENZE) TOT_SCADENZE, SUM(TOT_SCADVOCE) TOT_SCADVOCE FROM (
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO, IM_ACCERTAMENTO, 0 TOT_SCADENZE, 0 TOT_SCADVOCE FROM ACCERTAMENTO o
					UNION ALL
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO, 0, os.IM_SCADENZA, 0 FROM ACCERTAMENTO_SCADENZARIO os
					UNION ALL
					SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO, 0, 0, osv.IM_VOCE FROM ACCERTAMENTO_SCAD_VOCE osv)
					GROUP BY CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO
					HAVING SUM(IM_ACCERTAMENTO) != SUM(TOT_SCADENZE) OR SUM(IM_ACCERTAMENTO) != SUM(TOT_SCADVOCE)) LOOP
		IF rec.IM_ACCERTAMENTO != rec.TOT_SCADENZE THEN
			contaanomalie := contaanomalie + 1;
			dbms_output.put_line('Accertamento '||rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_ACCERTAMENTO||
					' di importo '||ltrim(rtrim(to_char(rec.IM_ACCERTAMENTO,'999g999g999g999g990d00')))||
					' non coincidente con il totale scadenze '||
					ltrim(rtrim(to_char(rec.TOT_SCADENZE,'999g999g999g999g990d00')))||'.');
		ELSE
			FOR rec1 IN (SELECT PG_ACCERTAMENTO_SCADENZARIO, SUM(IM_SCADENZA) IM_SCADENZA, SUM(TOT_SCADVOCE) TOT_SCADVOCE FROM (
							SELECT PG_ACCERTAMENTO_SCADENZARIO, os.IM_SCADENZA, 0 TOT_SCADVOCE FROM ACCERTAMENTO_SCADENZARIO os
							WHERE CD_CDS = rec.CD_CDS
							AND   ESERCIZIO = rec.ESERCIZIO
							AND   ESERCIZIO_ORIGINALE = rec.ESERCIZIO_ORIGINALE
							AND   PG_ACCERTAMENTO = rec.PG_ACCERTAMENTO
							UNION ALL
							SELECT PG_ACCERTAMENTO_SCADENZARIO, 0, osv.IM_VOCE FROM ACCERTAMENTO_SCAD_VOCE osv
							WHERE CD_CDS = rec.CD_CDS
							AND   ESERCIZIO = rec.ESERCIZIO
							AND   ESERCIZIO_ORIGINALE = rec.ESERCIZIO_ORIGINALE
							AND   PG_ACCERTAMENTO = rec.PG_ACCERTAMENTO)
							GROUP BY PG_ACCERTAMENTO_SCADENZARIO
							HAVING SUM(IM_SCADENZA) != SUM(TOT_SCADVOCE)) LOOP
				contaanomalie := contaanomalie + 1;
				dbms_output.put_line('Scadenza '||rec1.PG_ACCERTAMENTO_SCADENZARIO||' dell''accertamento '||
						rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_ACCERTAMENTO||
						' di importo '||ltrim(rtrim(to_char(rec1.IM_SCADENZA,'999g999g999g999g990d00')))||
						' non coincidente con il totale ripartito per voce '||
						ltrim(rtrim(to_char(rec1.TOT_SCADVOCE,'999g999g999g999g990d00')))||'.');
			END LOOP;
		END IF;
	END LOOP;

	--CONTROLLO CHE LE OBBLIGAZIONI SIANO COSTRUITE CORRETTAMENTE
	FOR rec IN (SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_OBBLIGAZIONE, PG_OBBLIGAZIONE_SCADENZARIO, IM_SCADENZA,
					   IM_ASSOCIATO_DOC_AMM, IM_ASSOCIATO_DOC_CONTABILE
				FROM OBBLIGAZIONE_SCADENZARIO
				WHERE (IM_ASSOCIATO_DOC_AMM != 0 AND IM_SCADENZA != IM_ASSOCIATO_DOC_AMM)
				OR (IM_ASSOCIATO_DOC_CONTABILE != 0 AND IM_SCADENZA != IM_ASSOCIATO_DOC_CONTABILE)) LOOP
		contaanomalie := contaanomalie + 1;
		IF (rec.IM_ASSOCIATO_DOC_AMM != 0 AND rec.IM_SCADENZA != rec.IM_ASSOCIATO_DOC_AMM) THEN
			dbms_output.put_line('Scadenza '||rec.PG_OBBLIGAZIONE_SCADENZARIO||' dell''obbligazione '||
					rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_OBBLIGAZIONE||
					' di importo '||ltrim(rtrim(to_char(rec.IM_SCADENZA,'999g999g999g999g990d00')))||
					' non coincidente con il totale documenti amministrativi associati '||
					ltrim(rtrim(to_char(rec.IM_ASSOCIATO_DOC_AMM,'999g999g999g999g990d00')))||'.');
		ELSIF (rec.IM_ASSOCIATO_DOC_CONTABILE != 0) THEN
			dbms_output.put_line('Scadenza '||rec.PG_OBBLIGAZIONE_SCADENZARIO||' dell''obbligazione '||
					rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_OBBLIGAZIONE||
					' di importo '||ltrim(rtrim(to_char(rec.IM_SCADENZA,'999g999g999g999g990d00')))||
					' non coincidente con il totale documenti contabili associati '||
					ltrim(rtrim(to_char(rec.IM_ASSOCIATO_DOC_CONTABILE,'999g999g999g999g990d00')))||'.');
		END IF;
    END LOOP;

	--CONTROLLO CHE GLI ACCERTAMENTI SIANO COSTRUITI CORRETTAMENTE
	FOR rec IN (SELECT CD_CDS, ESERCIZIO, ESERCIZIO_ORIGINALE, PG_ACCERTAMENTO, PG_ACCERTAMENTO_SCADENZARIO, IM_SCADENZA,
					   IM_ASSOCIATO_DOC_AMM, IM_ASSOCIATO_DOC_CONTABILE
				FROM ACCERTAMENTO_SCADENZARIO
				WHERE (IM_ASSOCIATO_DOC_AMM != 0 AND IM_SCADENZA != IM_ASSOCIATO_DOC_AMM)
				OR (IM_ASSOCIATO_DOC_CONTABILE != 0 AND IM_SCADENZA != IM_ASSOCIATO_DOC_CONTABILE)) LOOP
		contaanomalie := contaanomalie + 1;
		IF (rec.IM_ASSOCIATO_DOC_AMM != 0 AND rec.IM_SCADENZA != rec.IM_ASSOCIATO_DOC_AMM) THEN
			dbms_output.put_line('Scadenza '||rec.PG_ACCERTAMENTO_SCADENZARIO||' dell''accertamento '||
					rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_ACCERTAMENTO||
					' di importo '||ltrim(rtrim(to_char(rec.IM_SCADENZA,'999g999g999g999g990d00')))||
					' non coincidente con il totale documenti amministrativi associati '||
					ltrim(rtrim(to_char(rec.IM_ASSOCIATO_DOC_AMM,'999g999g999g999g990d00')))||'.');
		ELSIF (rec.IM_ASSOCIATO_DOC_CONTABILE != 0) THEN
			dbms_output.put_line('Scadenza '||rec.PG_ACCERTAMENTO_SCADENZARIO||' dell''accertamento '||
					rec.CD_CDS||'/'||rec.ESERCIZIO||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.PG_ACCERTAMENTO||
					' di importo '||ltrim(rtrim(to_char(rec.IM_SCADENZA,'999g999g999g999g990d00')))||
					' non coincidente con il totale documenti contabili associati '||
					ltrim(rtrim(to_char(rec.IM_ASSOCIATO_DOC_CONTABILE,'999g999g999g999g990d00')))||'.');
		END IF;
    END LOOP;

	--CONTROLLO CHE I LEGAMI TRA DOCUMENTI E OBBLIGAZIONI SIANO CORRETTI
	FOR rec IN (SELECT * FROM V_CONTROLLO_DISP_OBBLIGAZIONE_SCADENZARIO vcdos
				WHERE TOT_IMPEGNO_ASSOCIATO_CALCOLATO != TOT_IMPEGNO_ASSOCIATO) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Scadenza '||rec.PG_OBBLIGAZIONE_SCADENZARIO||' dell''obbligazione '||
				rec.CD_CDS_OBBLIGAZIONE||'/'||rec.ESERCIZIO_OBBLIGAZIONE||'/'||rec.ESERCIZIO_ORI_OBBLIGAZIONE||'/'||rec.PG_OBBLIGAZIONE||
				'. L''importo associato di documenti amministrativi ('||ltrim(rtrim(to_char(rec.TOT_IMPEGNO_ASSOCIATO,'999g999g999g999g990d00')))||
				') non coincide con il valore calcolato ('||ltrim(rtrim(to_char(rec.TOT_IMPEGNO_ASSOCIATO_CALCOLATO,'999g999g999g999g990d00')))||').');

	END LOOP;

	--CONTROLLO CHE I LEGAMI TRA DOCUMENTI E ACCERTAMENTI SIANO CORRETTI
	FOR rec IN (SELECT * FROM V_CONTROLLO_DISPACC_ACCERTAMENTO_SCADENZARIO vcdas
				WHERE TOT_ACCERTAMENTO_ASSOCIATO_CALCOLATO != TOT_ACCERTAMENTO_ASSOCIATO) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Scadenza '||rec.PG_ACCERTAMENTO_SCADENZARIO||' dell''accertamento '||
				rec.CD_CDS_ACCERTAMENTO||'/'||rec.ESERCIZIO_ACCERTAMENTO||'/'||rec.ESERCIZIO_ORI_ACCERTAMENTO||'/'||rec.PG_ACCERTAMENTO||
				'. L''importo associato di documenti amministrativi ('||ltrim(rtrim(to_char(rec.TOT_ACCERTAMENTO_ASSOCIATO,'999g999g999g999g990d00')))||
				') non coincide con il valore calcolato ('||ltrim(rtrim(to_char(rec.TOT_ACCERTAMENTO_ASSOCIATO_CALCOLATO,'999g999g999g999g990d00')))||').');

	END LOOP;

	--CONTROLLO CHE IL LEGAME TRA FATTURE PASSIVE E OBBLIGAZIONI IN TERMINI DI UNITÃ€ ORGANIZZATIVA SIANO CORRETTI
	FOR rec IN (SELECT DISTINCT fpr.ESERCIZIO, fpr.CD_CDS, fpr.CD_UNITA_ORGANIZZATIVA, fpr.PG_FATTURA_PASSIVA,
								fpr.ESERCIZIO_OBBLIGAZIONE, fpr.ESERCIZIO_ORI_OBBLIGAZIONE, fpr.CD_CDS_OBBLIGAZIONE, fpr.PG_OBBLIGAZIONE,
								o.CD_UNITA_ORGANIZZATIVA UO_OBBLIGAZIONE
				FROM FATTURA_PASSIVA_RIGA fpr
				LEFT JOIN OBBLIGAZIONE o ON o.ESERCIZIO = fpr.ESERCIZIO_OBBLIGAZIONE AND o.ESERCIZIO_ORIGINALE = fpr.ESERCIZIO_ORI_OBBLIGAZIONE AND o.CD_CDS = fpr.CD_CDS_OBBLIGAZIONE AND o.PG_OBBLIGAZIONE = fpr.PG_OBBLIGAZIONE
				WHERE fpr.PG_OBBLIGAZIONE IS NOT NULL
				AND o.CD_UNITA_ORGANIZZATIVA != fpr.CD_UNITA_ORGANIZZATIVA) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Fattura passiva '||rec.ESERCIZIO||'/'||rec.CD_CDS||'/'||rec.CD_UNITA_ORGANIZZATIVA||'/'||rec.PG_FATTURA_PASSIVA||
			' della UO '||rec.CD_UNITA_ORGANIZZATIVA||' collegata all''impegno '||
			rec.CD_CDS_OBBLIGAZIONE||'/'||rec.ESERCIZIO_OBBLIGAZIONE||'/'||rec.ESERCIZIO_ORI_OBBLIGAZIONE||'/'||rec.PG_OBBLIGAZIONE||
				' appartenente ad altra UO '||rec.UO_OBBLIGAZIONE||'.');

	END LOOP;

	--CONTROLLO CHE IL LEGAME TRA FATTURE ATTIVE E GLI ACCERTAMENTI IN TERMINI DI UNITÃ€ ORGANIZZATIVA SIANO CORRETTI
	FOR rec IN (SELECT DISTINCT fpr.ESERCIZIO, fpr.CD_CDS, fpr.CD_UNITA_ORGANIZZATIVA, fpr.PG_FATTURA_ATTIVA,
								fpr.ESERCIZIO_ACCERTAMENTO, fpr.ESERCIZIO_ORI_ACCERTAMENTO, fpr.CD_CDS_ACCERTAMENTO, fpr.PG_ACCERTAMENTO,
								o.CD_UNITA_ORGANIZZATIVA UO_ACCERTAMENTO
				FROM FATTURA_ATTIVA_RIGA fpr
				LEFT JOIN ACCERTAMENTO o ON o.ESERCIZIO = fpr.ESERCIZIO_ACCERTAMENTO AND o.ESERCIZIO_ORIGINALE = fpr.ESERCIZIO_ORI_ACCERTAMENTO AND o.CD_CDS = fpr.CD_CDS_ACCERTAMENTO AND o.PG_ACCERTAMENTO = fpr.PG_ACCERTAMENTO
				WHERE fpr.PG_ACCERTAMENTO IS NOT NULL
				AND o.CD_UNITA_ORGANIZZATIVA != fpr.CD_UNITA_ORGANIZZATIVA) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Fattura attiva '||rec.ESERCIZIO||'/'||rec.CD_CDS||'/'||rec.CD_UNITA_ORGANIZZATIVA||'/'||rec.PG_FATTURA_ATTIVA||
			' della UO '||rec.CD_UNITA_ORGANIZZATIVA||' collegata all''accertamento '||
			rec.CD_CDS_ACCERTAMENTO||'/'||rec.ESERCIZIO_ACCERTAMENTO||'/'||rec.ESERCIZIO_ORI_ACCERTAMENTO||'/'||rec.PG_ACCERTAMENTO||
				' appartenente ad altra UO '||rec.UO_ACCERTAMENTO||'.');

	END LOOP;

	--CONTROLLO CHE GLI ORDINI SIANO COSTRUITI CORRETTAMENTE
	FOR rec IN (SELECT CD_CDS, CD_UNITA_OPERATIVA, ESERCIZIO, CD_NUMERATORE, NUMERO,
						SUM(IM_IMPONIBILE) IM_IMPONIBILE, SUM(IM_IVA) IM_IVA,
						SUM(TOT_IMPONIBILE_RIGA) TOT_IMPONIBILE_RIGA, SUM(TOT_IVA_RIGA) TOT_IVA_RIGA,
						SUM(TOT_IMPONIBILE_CONSEGNA) TOT_IMPONIBILE_CONSEGNA, SUM(TOT_IVA_CONSEGNA) TOT_IVA_CONSEGNA FROM (
					SELECT CD_CDS, CD_UNITA_OPERATIVA, ESERCIZIO, CD_NUMERATORE, NUMERO, IM_IMPONIBILE, IM_IVA, 0 TOT_IMPONIBILE_RIGA, 0 TOT_IVA_RIGA, 0 TOT_IMPONIBILE_CONSEGNA, 0 TOT_IVA_CONSEGNA FROM ORDINE_ACQ oa
					UNION ALL
					SELECT CD_CDS, CD_UNITA_OPERATIVA, ESERCIZIO, CD_NUMERATORE, NUMERO, 0, 0, oar.IM_IMPONIBILE, oar.IM_IVA, 0, 0 FROM ORDINE_ACQ_RIGA oar
					UNION ALL
					SELECT CD_CDS, CD_UNITA_OPERATIVA, ESERCIZIO, CD_NUMERATORE, NUMERO, 0, 0, 0, 0, oac.IM_IMPONIBILE, oac.IM_IVA FROM ORDINE_ACQ_CONSEGNA oac)
					GROUP BY CD_CDS, CD_UNITA_OPERATIVA, ESERCIZIO, CD_NUMERATORE, NUMERO
					HAVING SUM(IM_IMPONIBILE) != SUM(TOT_IMPONIBILE_RIGA) OR SUM(IM_IVA) != SUM(TOT_IVA_RIGA) OR
						   SUM(IM_IMPONIBILE) != SUM(TOT_IMPONIBILE_CONSEGNA) OR SUM(IM_IVA) != SUM(TOT_IVA_CONSEGNA)) LOOP
		IF rec.IM_IMPONIBILE != rec.TOT_IMPONIBILE_RIGA OR rec.IM_IVA != rec.TOT_IVA_RIGA THEN
			contaanomalie := contaanomalie + 1;
			dbms_output.put_line('Ordine '||rec.CD_CDS||'/'||rec.CD_UNITA_OPERATIVA||'/'||rec.ESERCIZIO||'/'||rec.CD_NUMERATORE||'/'||rec.NUMERO||
					' di imponibile '||
					ltrim(rtrim(to_char(rec.IM_IMPONIBILE,'999g999g999g999g990d00')))||
					' e iva '||
					ltrim(rtrim(to_char(rec.IM_IVA,'999g999g999g999g990d00')))||
					' non coincidente con il totale riga ordine (imponibile: '||
					ltrim(rtrim(to_char(rec.TOT_IMPONIBILE_RIGA,'999g999g999g999g990d00')))||
					' - iva: '||
					ltrim(rtrim(to_char(rec.TOT_IVA_RIGA,'999g999g999g999g990d00')))||'.');
		ELSE
			FOR rec1 IN (SELECT RIGA, SUM(IM_IMPONIBILE) IM_IMPONIBILE, SUM(IM_IVA) IM_IVA,
							SUM(TOT_IMPONIBILE_CONSEGNA) TOT_IMPONIBILE_CONSEGNA, SUM(TOT_IVA_CONSEGNA) TOT_IVA_CONSEGNA FROM (
							SELECT RIGA, oar.IM_IMPONIBILE, oar.IM_IVA, 0 TOT_IMPONIBILE_CONSEGNA, 0 TOT_IVA_CONSEGNA FROM ORDINE_ACQ_RIGA oar
							WHERE CD_CDS = rec.CD_CDS
							AND   CD_UNITA_OPERATIVA = rec.CD_UNITA_OPERATIVA
							AND   ESERCIZIO = rec.ESERCIZIO
							AND   CD_NUMERATORE = rec.CD_NUMERATORE
							AND   NUMERO = rec.NUMERO
							UNION ALL
							SELECT oac.RIGA, 0, 0, nvl(fo.IM_IMPONIBILE, oac.IM_IMPONIBILE), nvl(fo.IM_IVA, oac.IM_IVA) FROM ORDINE_ACQ_CONSEGNA oac
							LEFT JOIN FATTURA_ORDINE fo ON fo.CD_CDS_ORDINE = oac.CD_CDS AND fo.CD_UNITA_OPERATIVA = oac.CD_UNITA_OPERATIVA AND
							                         fo.ESERCIZIO_ORDINE = oac.ESERCIZIO AND fo.CD_NUMERATORE = oac.CD_NUMERATORE AND
							                         fo.NUMERO = oac.NUMERO AND fo.RIGA = oac.RIGA AND fo.CONSEGNA = oac.CONSEGNA
							WHERE oac.CD_CDS = rec.CD_CDS
							AND   oac.CD_UNITA_OPERATIVA = rec.CD_UNITA_OPERATIVA
							AND   oac.ESERCIZIO = rec.ESERCIZIO
							AND   oac.CD_NUMERATORE = rec.CD_NUMERATORE
							AND   oac.NUMERO = rec.NUMERO)
							GROUP BY RIGA
							HAVING SUM(IM_IMPONIBILE) != SUM(TOT_IMPONIBILE_CONSEGNA) OR SUM(IM_IVA) != SUM(TOT_IVA_CONSEGNA)) LOOP
				contaanomalie := contaanomalie + 1;
				dbms_output.put_line('Riga '||rec1.RIGA||' dell''ordine '||rec.CD_CDS||'/'||rec.CD_UNITA_OPERATIVA||'/'||
						rec.ESERCIZIO||'/'||rec.CD_NUMERATORE||'/'||rec.NUMERO||
						' di imponibile '||
						ltrim(rtrim(to_char(rec.IM_IMPONIBILE,'999g999g999g999g990d00')))||
						' e iva '||
						ltrim(rtrim(to_char(rec.IM_IVA,'999g999g999g999g990d00')))||
						' non coincidente con il totale riga ordine (imponibile: '||
						ltrim(rtrim(to_char(rec.TOT_IMPONIBILE_CONSEGNA,'999g999g999g999g990d00')))||
						' - iva: '||
						ltrim(rtrim(to_char(rec.TOT_IVA_CONSEGNA,'999g999g999g999g990d00')))||'.');
			END LOOP;
		END IF;
	END LOOP;

    FOR rec IN (SELECT * FROM OBBLIGAZIONE o WHERE CD_CDS != substr(CD_UNITA_ORGANIZZATIVA,1,3)) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Obbligazione '||rec.CD_CDS||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.ESERCIZIO_ORIGINALE||'/'||
		rec.PG_OBBLIGAZIONE||'. Il CDS ('||rec.CD_CDS||') non corrisponde alla UO ('||rec.cd_unita_organizzativa||').');
    END LOOP;

    FOR rec IN (SELECT * FROM ACCERTAMENTO a WHERE CD_CDS != substr(CD_UNITA_ORGANIZZATIVA,1,3)) LOOP
		contaanomalie := contaanomalie + 1;
		dbms_output.put_line('Accertamento '||rec.CD_CDS||'/'||rec.ESERCIZIO_ORIGINALE||'/'||rec.ESERCIZIO_ORIGINALE||'/'||
		rec.PG_ACCERTAMENTO||'. Il CDS ('||rec.CD_CDS||') non corrisponde alla UO ('||rec.cd_unita_organizzativa||').');
    END LOOP;

	IF contaanomalie = 0 THEN
		aMessage := 'Non sono state rilevate anomalie.';
	ELSE
		aMessage := 'Sono state rilevate '||contaanomalie||' anomalie.';
		IBMERR001.RAISE_ERR_GENERICO(aMessage);
	END IF;
END;
/
